# Generated by Django 2.0.2 on 2018-02-15 08:55

import audit_log.models.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_no', models.CharField(max_length=75, verbose_name='House Number')),
                ('street', models.CharField(max_length=75, verbose_name='Street')),
                ('city', models.CharField(max_length=75, verbose_name='City')),
                ('ward', models.CharField(max_length=75, null=True, verbose_name='Ward')),
                ('lga', models.CharField(max_length=75, verbose_name='LGA')),
                ('state', models.CharField(max_length=75, verbose_name='State')),
                ('country', models.CharField(default='Nigeria', max_length=75, verbose_name='Country')),
            ],
        ),
        migrations.CreateModel(
            name='CorporateTaxPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Company Name')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('start_date', models.DateField(verbose_name='Business Start Date')),
                ('tin', models.CharField(blank=True, max_length=10, unique=True, verbose_name='JTB TIN')),
                ('company_size', models.CharField(choices=[('Small', 'Small'), ('Medium', 'Medium'), ('Large', 'Large')], max_length=20, verbose_name='Company Size')),
                ('ownership_type', models.CharField(choices=[('Private Limited Company', 'Private Limited Company'), ('Public Limited Company', 'Public Limited Company'), ('Trusteeship', 'Trusteeship'), ('Companies Limited By Guarantee', 'Companies Limited By Guarantee'), ('Federal MDAs', 'Federal MDAs'), ('State MDAs', 'State MDAs'), ('Foreign/Non-resident Companies', 'Foreign/Non-resident Companies'), ('Partnership', 'Partnership'), ('Private Unlimited Company', 'Private Unlimited Company'), ('Sole Proprietorship', 'Sole Proprietorship')], max_length=75, verbose_name='Ownership Type')),
                ('reg_status', models.CharField(choices=[('Registered', 'Registered'), ('Unregistered', 'Unregistered')], max_length=20, verbose_name='Registration Status')),
                ('reg_no', models.CharField(max_length=20, null=True, verbose_name='Registration Number')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corporate_tax_payers', to='dashboard.Address')),
            ],
        ),
        migrations.CreateModel(
            name='CorporateTaxPayerAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Company Name')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('start_date', models.DateField(verbose_name='Business Start Date')),
                ('tin', models.CharField(blank=True, db_index=True, max_length=10, verbose_name='JTB TIN')),
                ('company_size', models.CharField(choices=[('Small', 'Small'), ('Medium', 'Medium'), ('Large', 'Large')], max_length=20, verbose_name='Company Size')),
                ('ownership_type', models.CharField(choices=[('Private Limited Company', 'Private Limited Company'), ('Public Limited Company', 'Public Limited Company'), ('Trusteeship', 'Trusteeship'), ('Companies Limited By Guarantee', 'Companies Limited By Guarantee'), ('Federal MDAs', 'Federal MDAs'), ('State MDAs', 'State MDAs'), ('Foreign/Non-resident Companies', 'Foreign/Non-resident Companies'), ('Partnership', 'Partnership'), ('Private Unlimited Company', 'Private Unlimited Company'), ('Sole Proprietorship', 'Sole Proprietorship')], max_length=75, verbose_name='Ownership Type')),
                ('reg_status', models.CharField(choices=[('Registered', 'Registered'), ('Unregistered', 'Unregistered')], max_length=20, verbose_name='Registration Status')),
                ('reg_no', models.CharField(max_length=20, null=True, verbose_name='Registration Number')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='_corporatetaxpayer_audit_log_entry', to=settings.AUTH_USER_MODEL)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_corporate_tax_payers', to='dashboard.Address')),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True, verbose_name='Country')),
                ('code', models.CharField(max_length=2, unique=True, verbose_name='Code')),
            ],
        ),
        migrations.CreateModel(
            name='Lga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='LGA')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True, verbose_name='State')),
            ],
        ),
        migrations.CreateModel(
            name='TaxPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=75, verbose_name='Surname')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('other_name', models.CharField(max_length=75, null=True, verbose_name='Other Name')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=20, verbose_name='Marital Status')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('tin', models.CharField(blank=True, max_length=10, unique=True, verbose_name='JTB TIN')),
                ('lga_of_origin', models.CharField(max_length=75, verbose_name='LGA')),
                ('state_of_origin', models.CharField(max_length=75, verbose_name='State of Origin')),
                ('nationality', models.CharField(max_length=75, verbose_name='Nationality')),
                ('tax_payer_company', models.CharField(max_length=150, verbose_name='Company')),
                ('occupation', models.CharField(max_length=75, verbose_name='Occupation')),
                ('employment_status', models.CharField(choices=[('Unemployed', 'Unemployed'), ('Self Employed', 'Self Employed'), ('Employed', 'Employed')], max_length=20, verbose_name='Employment Status')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individual_tax_payers', to='dashboard.Address')),
            ],
        ),
        migrations.CreateModel(
            name='TaxPayerAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('surname', models.CharField(max_length=75, verbose_name='Surname')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('other_name', models.CharField(max_length=75, null=True, verbose_name='Other Name')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=20, verbose_name='Marital Status')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('tin', models.CharField(blank=True, db_index=True, max_length=10, verbose_name='JTB TIN')),
                ('lga_of_origin', models.CharField(max_length=75, verbose_name='LGA')),
                ('state_of_origin', models.CharField(max_length=75, verbose_name='State of Origin')),
                ('nationality', models.CharField(max_length=75, verbose_name='Nationality')),
                ('tax_payer_company', models.CharField(max_length=150, verbose_name='Company')),
                ('occupation', models.CharField(max_length=75, verbose_name='Occupation')),
                ('employment_status', models.CharField(choices=[('Unemployed', 'Unemployed'), ('Self Employed', 'Self Employed'), ('Employed', 'Employed')], max_length=20, verbose_name='Employment Status')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='_taxpayer_audit_log_entry', to=settings.AUTH_USER_MODEL)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_individual_tax_payers', to='dashboard.Address')),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='lga',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lgas', to='dashboard.State'),
        ),
        migrations.AlterUniqueTogether(
            name='lga',
            unique_together={('name', 'state')},
        ),
    ]
